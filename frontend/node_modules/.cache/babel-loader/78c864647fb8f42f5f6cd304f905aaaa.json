{"ast":null,"code":"import token,{makeOptions,handleHttpErrors}from\"./fetchUtils\";import{loginURL as URL}from\"./settings\";function apiFacade(){var setToken=function setToken(token){return token.setToken(token);};var getToken=function getToken(){return token.getToken();};var loggedIn=function loggedIn(){return token.loggedIn();};var logout=function logout(){return token.logout();};var login=function login(user,password){var options=makeOptions(\"POST\",true,{username:user,password:password});return fetch(URL+\"/api/login\",options).then(handleHttpErrors).then(function(res){token.setToken(res.token);});};var signup=function signup(username,password){var options=makeOptions(\"POST\",true,{username:username,password:password});return fetch(\"http://localhost:8080/jpareststarter/api/signup\",options).then(handleHttpErrors);};var fetchUserRole=function fetchUserRole(user){var options=makeOptions(\"GET\",true);return fetch(URL+\"/api/info/\"+user,options).then(handleHttpErrors);};return{login:login,fetchUserRole:fetchUserRole,setToken:setToken,getToken:getToken,loggedIn:loggedIn,logout:logout,signup:signup};}var facade=apiFacade();export default facade;","map":{"version":3,"sources":["/Users/Marcus/CPHBUSINESS/3.semester/CA3_Personal_frontend/frontend/src/facades/LoginFacade.js"],"names":["token","makeOptions","handleHttpErrors","loginURL","URL","apiFacade","setToken","getToken","loggedIn","logout","login","user","password","options","username","fetch","then","res","signup","fetchUserRole","facade"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,gBAA7B,KAAqD,cAArD,CACA,OAASC,QAAQ,GAAIC,CAAAA,GAArB,KAAgC,YAAhC,CAEA,QAASC,CAAAA,SAAT,EAAqB,CACnB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACN,KAAD,QAAWA,CAAAA,KAAK,CAACM,QAAN,CAAeN,KAAf,CAAX,EAAjB,CACA,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMP,CAAAA,KAAK,CAACO,QAAN,EAAN,EAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMR,CAAAA,KAAK,CAACQ,QAAN,EAAN,EAAjB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMT,CAAAA,KAAK,CAACS,MAAN,EAAN,EAAf,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,IAAD,CAAOC,QAAP,CAAoB,CAChC,GAAMC,CAAAA,OAAO,CAAGZ,WAAW,CAAC,MAAD,CAAS,IAAT,CAAe,CACxCa,QAAQ,CAAEH,IAD8B,CAExCC,QAAQ,CAAEA,QAF8B,CAAf,CAA3B,CAIA,MAAOG,CAAAA,KAAK,CAACX,GAAG,CAAG,YAAP,CAAqBS,OAArB,CAAL,CACJG,IADI,CACCd,gBADD,EAEJc,IAFI,CAEC,SAACC,GAAD,CAAS,CACbjB,KAAK,CAACM,QAAN,CAAeW,GAAG,CAACjB,KAAnB,EACD,CAJI,CAAP,CAKD,CAVD,CAYA,GAAMkB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACJ,QAAD,CAAWF,QAAX,CAAuB,CACpC,GAAMC,CAAAA,OAAO,CAAGZ,WAAW,CAAC,MAAD,CAAS,IAAT,CAAe,CACxCa,QAAQ,CAARA,QADwC,CAExCF,QAAQ,CAARA,QAFwC,CAAf,CAA3B,CAIA,MAAOG,CAAAA,KAAK,CAAC,iDAAD,CAAoDF,OAApD,CAAL,CAAkEG,IAAlE,CAAuEd,gBAAvE,CAAP,CACD,CAND,CAQA,GAAMiB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,IAAD,CAAU,CAC9B,GAAME,CAAAA,OAAO,CAAGZ,WAAW,CAAC,KAAD,CAAQ,IAAR,CAA3B,CACA,MAAOc,CAAAA,KAAK,CAACX,GAAG,CAAG,YAAN,CAAqBO,IAAtB,CAA4BE,OAA5B,CAAL,CAA0CG,IAA1C,CAA+Cd,gBAA/C,CAAP,CACD,CAHD,CAKA,MAAO,CACLQ,KAAK,CAALA,KADK,CAELS,aAAa,CAAbA,aAFK,CAGLb,QAAQ,CAARA,QAHK,CAILC,QAAQ,CAARA,QAJK,CAKLC,QAAQ,CAARA,QALK,CAMLC,MAAM,CAANA,MANK,CAOLS,MAAM,CAANA,MAPK,CAAP,CASD,CACD,GAAME,CAAAA,MAAM,CAAGf,SAAS,EAAxB,CACA,cAAee,CAAAA,MAAf","sourcesContent":["import token, { makeOptions, handleHttpErrors } from \"./fetchUtils\";\nimport { loginURL as URL } from \"./settings\";\n\nfunction apiFacade() {\n  const setToken = (token) => token.setToken(token)\n  const getToken = () => token.getToken();\n  const loggedIn = () => token.loggedIn();\n  const logout = () => token.logout();\n\n  const login = (user, password) => {\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: password,\n    });\n    return fetch(URL + \"/api/login\", options)\n      .then(handleHttpErrors)\n      .then((res) => {\n        token.setToken(res.token);\n      });\n  };\n\n  const signup = (username, password) =>{\n    const options = makeOptions(\"POST\", true, {\n      username,\n      password\n    }); \n    return fetch(\"http://localhost:8080/jpareststarter/api/signup\", options).then(handleHttpErrors);\n  }\n\n  const fetchUserRole = (user) => {\n    const options = makeOptions(\"GET\", true); \n    return fetch(URL + \"/api/info/\" + user, options).then(handleHttpErrors);\n  };\n\n  return {\n    login,\n    fetchUserRole,\n    setToken,\n    getToken,\n    loggedIn,\n    logout,\n    signup\n  };\n}\nconst facade = apiFacade();\nexport default facade;\n"]},"metadata":{},"sourceType":"module"}